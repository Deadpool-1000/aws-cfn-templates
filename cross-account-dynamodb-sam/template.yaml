AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Resources:
  FailureDestinationQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: FailureDestinationQueue
      Tags:
        - Key: app
          Value: ServerlessWithDynamoDB
    
  LambdaAssumeRole:
    Type: "AWS::IAM::Role"
    Properties:
      Description: Role for lambda service to access role in different account
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole"
      Policies:
        - PolicyName: AllowLambdaAssumeRoleAndQueueAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: AssumeCrossAccountRole
                Effect: Allow
                Action:
                  - "sts:AssumeRole"
                Resource: "arn:aws:iam::654654393019:role/LambdaDynamoDBcrossAccountRole"
              - Sid: AllowToReadAndPutRecordsinQueue
                Effect: Allow
                Action:
                  - "sqs:ChangeMessageVisibility"
                  - "sqs:DeleteMessage"
                  - "sqs:ReceiveMessage"
                  - "sqs:SendMessage"
                Resource: !GetAtt FailureDestinationQueue.Arn
      RoleName: LambdaDynamoDbProcessorRole
      Tags:
        - Key: app
          Value: ServerlessWithDynamoDB

  ProcessDynamoDBStreamFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.12
      FunctionName: ProcessDynamoDBStreamFunction
      CodeUri: src/
      Role: !GetAtt LambdaAssumeRole.Arn
      Timeout: 60
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt ECommerceTable.StreamArn
            StartingPosition: TRIM_HORIZON
            MaximumRecordAgeInSeconds: 60
            MaximumRetryAttempts: 10
            DestinationConfig:
              OnFailure:
                Type: SQS
                Destination: !GetAtt FailureDestinationQueue.Arn
      
  ECommerceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      BillingMode: PROVISIONED
      DeletionProtectionEnabled: false
      GlobalSecondaryIndexes:
        - IndexName: InvertedIndex
          KeySchema:
            - KeyType: HASH
              AttributeName: SK
            - KeyType: RANGE
              AttributeName: PK
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            WriteCapacityUnits: 1
            ReadCapacityUnits: 1
      KeySchema:
        - KeyType: HASH
          AttributeName: PK
        - KeyType: RANGE
          AttributeName: SK
      TableClass: STANDARD
      TableName: "Ecommerce-table"
      Tags:
        - Key: app
          Value: ServerlessWithDynamoDB
      ProvisionedThroughput:
        WriteCapacityUnits: 1
        ReadCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_IMAGE
